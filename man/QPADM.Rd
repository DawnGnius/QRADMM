% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QPADM.R
\name{QPADM}
\alias{QPADM}
\title{Penalized quantile regression with ADMM}
\usage{
QPADM(X, y, tau, rho, lambda, iter = 500, intercept = TRUE, M = 1,
  penalty = "lasso", a = 3.7)
}
\arguments{
\item{X}{The design matrix (without intercept)}

\item{y}{The response vector}

\item{tau}{The quantile of interest}

\item{rho}{The augmentation parameter for the ADMM}

\item{lambda}{The penalization parameter}

\item{iter}{Maximum number of iterations allowed}

\item{intercept}{Whether to include the intercept into the model, default is TRUE}

\item{M}{Number of subsets (split the data into M blocks)}

\item{penalty}{Name of the penalty to use, currently support ("none","lasso","enet","scad","mcp")}

\item{a}{The shape parameter for the MCP/SCAD penalty}
}
\value{
The coefficient estimation of the linear quantile regression model
}
\description{
Currently support penalized quantile regression with the Lasso, MCP and SCAD penalties.
This is a pseudo-parallel implementation. The beta-update is solved with EM algorithm
that results in a closed-form solution. See the paper
\url{https://amstat.tandfonline.com/doi/full/10.1080/10618600.2017.1328366#.WsMVH9PwafU}
for details.
}
\examples{
require(MASS)
n=3000; p=100
Sig = matrix(0, nrow = p, ncol = p)
for(i1 in 1:p){
  for(j in 1:p){
    Sig[i1,j] = 0.5^abs(i1-j)
  }
}
X = mvrnorm(n, mu = rep(0,p), Sigma = Sig, tol = 1e-6)
X[,1]=pnorm(X[,1])
u = rnorm(n)
y=X[,3] + X[,4] + X[,5] + X[,1]*u
beta = QPADM(X, y, .9, 1, 20, penalty="mcp", intercept=FALSE, M=10)
}
\seealso{
\code{\link{QRADMM}}
}
